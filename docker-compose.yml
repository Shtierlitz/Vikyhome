# F:\Python\Тюрина деплой\cleaning_service\docker-compose.yml
version: "3.9"

services:
  pg_db:
    container_name: pg_db
    image:
      postgres:14.7-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data/
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASS}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_DB: ${DATABASE_NAME}
    env_file:
      - ./cleaning-service/api/.env

  backend:
    container_name: Vikyhome_api
    build:
      context: ./cleaning-service/api
      dockerfile: Dockerfile-api
    environment:
      DJANGO_SETTINGS_MODULE: api.settings
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASS: ${DATABASE_PASS}
      DATABASE_HOST: ${DATABASE_HOST}
    entrypoint: ./entrypoint.sh
    restart: on-failure
    command: bash -c "gunicorn api.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/django/staticfiles
      - media_volume:/django/mediafiles
    ports:
      - "8000:8000"
    env_file:
      - ./cleaning-service/api/.env
    depends_on:
      - pg_db

  frontend:
    container_name: Vikyhome_front
    build:
      context: ./vikyhome
      dockerfile: Dockerfile-front
    ports:
      - "3145:80"  # Здесь изменил порт с 3000 на 80
    volumes:
      - react_build:/react/build
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx_setup.conf:/etc/nginx/conf.d/default.conf
      - react_build:/var/www/react
      - static_volume:/django/staticfiles
      - media_volume:/django/mediafiles
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend

volumes:
  pg_data:
  static_volume:
  media_volume:
  react_build:
